using System;
using System.Collections.Generic;
using System.Text;
using Interfaces.Games;
using Interfaces.Pool;
using Prometheus.Controls.TagEditor;
using DevComponents.DotNetBar;
using Interfaces;
using Core.Project;

namespace Prometheus.Testing
{
  [TestInfo("Nick", "Create Halo PC Test Tag", "Creates an instance of the Halo PC Testing tag and saves it to the current project.<br/><b>A project must be loaded.</b>")]
  public class OpenTestTag : ITest
  {
    public void PerformTest()
    {
      ProjectManager projectManager = Core.Prometheus.Instance.ProjectManager;
      if (!projectManager.ProjectLoaded)
      {
        Output.Write(OutputTypes.Error, "This test cannot run unless a project is loaded");
        return;
      }

      GameDefinition halo1 = Core.Prometheus.Instance.GetGameDefinitionByGameID("halopc");
      Type tagType = halo1.TypeTable.LocateEntryByFourCC("test").TagType;
      TagPath testPath = new TagPath("nick.testing", "halopc", TagLocation.Project);
      Tag test = Core.Prometheus.Instance.Pool.Create(testPath, tagType, false);
      
      TagFile tagFile = new TagFile(new byte[0], "Prometheus", "Auto-generated Testing tag.",
        "test", "\0\0\0\0", "\0\0\0\0", Encoding.ASCII.GetBytes(testPath.Game));
      Core.Prometheus.Instance.Pool.SaveTag(test, tagFile);

      projectManager.AddTagToProject(test, testPath);     
    }
  }
}

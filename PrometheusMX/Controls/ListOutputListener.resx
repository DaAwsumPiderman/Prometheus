<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACo
        BQAAAk1TRnQBSQFMAwEBAAEEAQABBAEAARABAAEQAQAE/wEZAQAI/wFCAU0BNgcAATYDAAEoAwABQAMA
        ARADAAEBAQABGAYAAQwSAAHQAgABxAIAAbgCAAG0AgABtAIAAbQCAAG0AgABtAIAAbQCAAG0AgABtAIA
        AbQCAAG0AgABuAIAAcQCAAHQkgABxAIAAZICAAFrAgABYAIAAV8CAAFfAgABXwIAAV8CAAFfAgABXwIA
        AV8CAAFfAgABYAIAAWsCAAGSAgABxJIAAWkBBgFPAhUBqgILAaUBCwEKAaIBCwEJAZ4BCwEHAZoBCwEF
        AZcBCwEDAZMBCwEDAZABCwEAAY4BCwEBAY4BCwEBAYwBDgEAAYgBSAEAASsBagIAAbiSAAEcASMBuwEk
        AUEB4AEAAR4B1wEAARkB0wEFASYB2wEAARQBywEAARYByAEAARUBwwEAAQsBvAEJASEBxwEAAQYBsQEA
        AQoBrgEAAQQBogEMAQABigFfAgABtJIAAR8BLQHIASYBSgHuAQABIAHmAQUBMwHyAbABwQHvARYBQQHx
        AQABGQHYAQABFAHSARwBQAHlAc8B4QH/ASEBRAHhAQABBwG4AQABCQGrAQgBAQGRAV4CAAG0kgABJAE0
        AcwBKQFPAfcBAAEoAfgBwAHHAeQB8QHtAeAB2QHfAewBDwE7AfEBDAE0AesB4gHrAfwC/wH7Ae8B+AH/
        ASABQwHgAQABBAGtAQgBAQGRAV4CAAG0kgABJwE3AdEBKAFSAf8BoAGsAeIB7gHqAd0C5AHjAfEB7wHp
        AdQB3AHzAc8B2QH4Av8B+gb/Ad4B7QH/AQ8BJwHIAQgBAAGRAV4CAAG0kgABKgE+AdQBNwFkAf8BAwE0
        AfcC1wHgAewB6wHlAe0B7AHrAvQB8QH7AfoB9wL+Af0D/wH4Af0B/wEuAVQB7AEAAQgBtwEIAQQBlwFe
        AgABtJIAAS8BQgHYAUQBcwH/AQABPQH/AQUBNwH4AdIB1gHoAu4B6wPxA/kC/wH+AeoB7wH/AR0BRgHv
        AQABEgHRAQABEgG/AQgBBwGaAV4CAAG0kgABMQFJAd0BTQGBAf8BBQFLAf8BAAEsAfYBsAG6AegB8AHv
        AesD8QP3Av8B/gHUAd8B/wEBAS0B7QEAARkB2AEAARUBxQEIAQkBnwFeAgABtJIAATUBTgHgAVYBjgH/
        AQABMQHrAbYBuAHcAe4B7QHkAusB6gLzAfAC+QH2Av4B/QP/AeAB6gH/AQcBMwHtAQABEwHHAQgBCwGj
        AV4CAAG0kgABOwFVAeUBTwF3AewBmgGYAcsB7QHrAd4C5QHjAfEB8AHpAdMB1wHuAd8B4wH0Av8B+QL/
        Af4D/wHQAd4B/wECASMB2AEIAQwBqAFeAgABtJIAAT4BWAHoAWcBpAH/AQ8BNQHSAdgB1AHYAe4B7QHj
        AdkB2AHkAQEBMwHwAQYBOAH2Au4B9QL/AfkB+gH7Af8BHAFIAfcBAAEWAc8BCAEPAa8BXwIAAbSSAAFA
        AVsB6gFtAasB/wERAW4B/wERATYB0wG9AbkB1AEGATMB4wEEAUoB/wEAATwB/wEFATQB9QHWAdwB9QEM
        ATsB+QEAAR0B5gEAARsB0wEIARABsgFsAgABuJIAATgBUgHoAboB4AH/AVwBoAH/AVYBmgH/AToBYAHk
        AUUBhAH/AT8BdgH/ATYBaQH/ASkBWgH/ARkBRAH5AR4BRQH2AR0BQAHtAR0BOAHbARUBGwGzAZUCAAHE
        kgABdwEQAWsBPAFMAd4BQwFUAd8BQQFRAd0BPgFQAdkBOgFIAdgBNwFFAdQBNAE+AdMBLwE7Ac4BLQE3
        AcwBKQEyAckBJQEtAcMCJAG4AXEBBwFOAcQCAAHQkgABQgFNAT4HAAE+AwABKAMAAUADAAEQAwABAQEA
        AQEFAAGAFwAD/4EACw==
</value>
  </data>
</root>